{"version":3,"sources":["../src/main.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAgBA,IAAM,QAAQ,GAAG,yCAAyC,CAAC;;AAE3D,IAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;AACrC,IAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,IAAM,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;;AAE/B,IAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC;AACzB,IAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;AAC7C,IAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC;;AAE/C,IAAM,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;;AAExC,IAAI,UAAU,GAAG,IAAI,CAAC;;AAEtB,GAAG,CAAC,EAAE,CAAC,mBAAmB,EAAE,YAAW;AACrC,MAAI,OAAO,CAAC,QAAQ,IAAI,QAAQ,EAAE;AAChC,OAAG,CAAC,IAAI,EAAE,CAAC;GACZ;CACF,CAAC,CAAC;;AAEH,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,YAAW;AACzB,YAAU,GAAG,IAAI,aAAa,CAAC;AAC7B,SAAK,EAAE,QAAQ;AACf,QAAI,OAAK,GAAG,CAAC,UAAU,EAAE,GAAG,IAAI,CAAC,GAAG,cAAS,IAAI,CAAC,GAAG,UAAO;AAC5D,mBAAe,EAAE,IAAI;AACrB,kBAAc,EAAE;AACd,qBAAe,EAAE,KAAK;AACtB,iBAAW,EAAE,KAAK;;AAAA,KAEnB;AACF,SAAK,EAAE,GAAG;AACV,UAAM,EAAE,GAAG;AACV,YAAQ,EAAE,GAAG;AACb,aAAS,EAAE,GAAG;AACd,QAAI,EAAE,KAAK;GACZ,CAAC,CAAC;;AAEH,MAAI,WAAW,GAAG,AAAC,OAAO,CAAC,QAAQ,IAAI,QAAQ,GAAI,WAAW,GAAG,cAAc,CAAC;;AAEhF,gBAAc,CAAC,QAAQ,CAAC,WAAW,EAAE,YAAM;AACzC,cAAU,CAAC,cAAc,EAAE,CAAC;GAC7B,CAAC,CAAC;;AAEH,gBAAc,CAAC,QAAQ,CAAC,QAAQ,EAAE,YAAM;AACtC,cAAU,CAAC,mBAAmB,EAAE,CAAC;GAClC,CAAC,CAAC;;AAEH,SAAO,CAAC,IAAI,CAAC,CAAA,YAAW;AACpB,cAAU,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAC5C,cAAU,CAAC,WAAW,CAAC,EAAE,CAAC,iBAAiB,EAAE,YAAW;AACtD,gBAAU,CAAC,IAAI,EAAE;;AAAC,KAEnB,CAAC,CAAC;GACJ,CAAA,CAAC,IAAI,CAAC,UAAU,CAAC,EAClB,GAAG,CAAC,UAAU,EAAE,EAChB,UAAU,CACX,CAAC;;AAEF,YAAU,CAAC,WAAW,CAAC,EAAE,CAAC,YAAY,EAAE,UAAS,CAAC,EAAE,GAAG,EAAE;AACvD,KAAC,CAAC,cAAc,EAAE,CAAC;AACnB,SAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;GACzB,CAAC,CAAC;;AAEH,YAAU,CAAC,EAAE,CAAC,QAAQ,EAAE,YAAW;AACjC,cAAU,GAAG,IAAI,CAAC;AAClB,WAAO,CAAC,KAAK,EAAE,CAAC;GACjB,CAAC,CAAC;CACJ,CAAC,CAAC","file":"main.js","sourcesContent":["// main.es6 - The main driver for Electron\r\n// Copyright (C) 2015 Frank Hale <frankhale@gmail.com>\r\n//\r\n// This program is free software: you can redistribute it and/or modify\r\n// it under the terms of the GNU General Public License as published by\r\n// the Free Software Foundation, either version 3 of the License, or\r\n// (at your option) any later version.\r\n//\r\n// This program is distributed in the hope that it will be useful,\r\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n// GNU General Public License for more details.\r\n//\r\n// You should have received a copy of the GNU General Public License\r\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\r\n\r\nconst appTitle = \"Toby - A YouTube Player For The Desktop\";\r\n\r\nconst electron = require(\"electron\");\r\nconst path = require(\"path\");\r\nconst shell = require(\"shell\");\r\n\r\nconst app = electron.app;\r\nconst BrowserWindow = electron.BrowserWindow;\r\nconst globalShortcut = electron.globalShortcut;\r\n\r\nconst backend = require(\"./backend.js\");\r\n\r\nvar mainWindow = null;\r\n\r\napp.on(\"window-all-closed\", function() {\r\n  if (process.platform != \"darwin\") {\r\n    app.quit();\r\n  }\r\n});\r\n\r\napp.on(\"ready\", function() {\r\n  mainWindow = new BrowserWindow({\r\n    title: appTitle,\r\n    icon: `${app.getAppPath()}${path.sep}images${path.sep}t.png`,\r\n    autoHideMenuBar: true,\r\n    webPreferences: {\r\n      nodeIntegration: false,\r\n      webSecurity: false // we want access to contents of iframe\r\n                         // so we can make changes\r\n    },\r\n\t  width: 640,\r\n\t  height: 400,\r\n    minWidth: 640,\r\n    minHeight: 400,\r\n    show: false\r\n  });\r\n\r\n  var cmdShortCut = (process.platform == \"darwin\") ? \"Cmd+Alt+I\" : \"Ctrl+Shift+I\";\r\n\r\n  globalShortcut.register(cmdShortCut, () => {\r\n    mainWindow.toggleDevTools();\r\n  });\r\n\r\n  globalShortcut.register(\"ctrl+r\", () => {\r\n    mainWindow.reloadIgnoringCache();\r\n  });\r\n\r\n  backend.init(function() {\r\n      mainWindow.loadURL(\"http://127.0.0.1:3000\");\r\n      mainWindow.webContents.on(\"did-finish-load\", function() {\r\n        mainWindow.show();\r\n        //mainWindow.webContents.openDevTools();\r\n      });\r\n    }.bind(mainWindow),\r\n    app.getAppPath(),\r\n    mainWindow\r\n  );\r\n\r\n  mainWindow.webContents.on(\"new-window\", function(e, url) {\r\n    e.preventDefault();\r\n    shell.openExternal(url);\r\n  });\r\n\r\n  mainWindow.on(\"closed\", function() {\r\n    mainWindow = null;\r\n    backend.close();\r\n  });\r\n});\r\n"]}